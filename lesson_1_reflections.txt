1. How did viewing a diff between two versions of a file help you see the bug that was introduced?
It helpeld a lot, because diff pointed to the lines that were different, and I only had to worry about them.

2. How could having easy acces to the entire history of a file make you a more efficient programmer in the long term?
It makes it easy to go back to previously working versions of the program I am working on if I changed it and it now has bugs.

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
The main pro is that you can save more often if you find it necessary, the main con is that you migth forget to save.

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Git may be more focused on programmers.

5. How can you use the commands git log and git diff to view the history of files?
You can use git log to view all of your commits and git diff to see what is different between them.

6. How might using version control make you more confident to make changes that could break something?
Using version control makes it possible to return to prebious versions of the project;

7.Now that you have your workspace set up, what do you want to try using Git for?
I am a bit curious to use it when I make my next programming project, especially for the checkout function.